{"version":3,"file":"static/js/56.48ffacbb.chunk.js","mappings":"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","sources":["pages/contacts/ContactsStyled.js","pages/contacts/ContactsPage.jsx"],"sourcesContent":["import { Button } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledSubmitBtn = styled(Button)`\n  background-color: greenyellow;\n  &:hover {\n    background-color: red;\n  }\n`;","import React, { useEffect, useState } from 'react'; \nimport { useDispatch, useSelector } from 'react-redux';\n// import { Button } from 'antd';\n\nimport Loader from 'components/Loader/Loader';\nimport { selectAuthentificated } from 'redux/authReducer';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  requestContactsThunk,\n  selectContactsError,\n  selectContactsIsLoading,\n  selectUserContacts,\n  updateContactThunk, // Импортируйте экшен для обновления контакта\n} from 'redux/contactsReducer';\nimport { StyledSubmitBtn } from './ContactsStyled';\n\nconst Contacts = () => {\n  const [editingContact, setEditingContact] = useState(null); // Локальное состояние для редактирования контакта\n  const [updatedContact, setUpdatedContact] = useState({ name: '', number: '' });\n\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists!`);\n\n    dispatch(addContactThunk({ name, number }));\n  };\n  const handleEditContact = (contact) => {\n    setEditingContact(contact); // Устанавливаем контакт для редактирования\n    setUpdatedContact({\n      name: contact.name,\n      number: contact.number,\n    });\n  };\n\n  const handleSaveChanges = () => {\n    // Отправляем обновленные данные контакта на сервер\n    if (editingContact) {\n      console.log(\"Save changes button clicked\");\n      const { id, name, number } = editingContact;\n      console.log('Updated Contact Data:', { id, name, number });\n      dispatch(updateContactThunk({ contactId: id, updatedData: { ...updatedContact } }));\n\n      setEditingContact(null); // Очищаем состояние редактирования\n    }\n  };\n  \n\n\n  // const handleUpdateContact = (contactId, updatedData) => {\n  //   // В updatedData должны быть новые данные для контакта, например, новое имя или номер\n  //   dispatch(updateContactThunk({ id: contactId, ...updatedData }));\n  // };\n\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name:</p>\n          <input name=\"contactName\" type=\"text\" required />\n        </label>\n        <br />\n        <label>\n          <p>Number:</p>\n          <input name=\"contactNumber\" type=\"text\" required />\n        </label>\n        <br /><br />\n        <StyledSubmitBtn htmlType=\"submit\">Add contact</StyledSubmitBtn>\n      </form>\n\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured... {error}</p>}\n      <ul>\n      {showContacts &&\n  contacts.map((contact) => {\n    return (\n      <li key={contact.id}>\n        {editingContact && editingContact.id === contact.id ? (\n          <div>\n            {/* Форма редактирования контакта */}\n            <label>\n              <p>Name:</p>\n              <input\n                name=\"contactName\"\n                type=\"text\"\n                required\n                value={updatedContact.name} // Здесь использовать updatedContact\n                onChange={(e) =>\n                  setUpdatedContact({\n                    ...updatedContact,\n                    name: e.target.value,\n                  })\n                }\n              />\n            </label>\n            <br />\n            <label>\n              <p>Number:</p>\n              <input\n                name=\"contactNumber\"\n                type=\"text\"\n                required\n                value={updatedContact.number} // Здесь использовать updatedContact\n                onChange={(e) =>\n                  setUpdatedContact({\n                    ...updatedContact,\n                    number: e.target.value,\n                  })\n                }\n              />\n            </label>\n            <br />\n            <StyledSubmitBtn onClick={handleSaveChanges}>\n              Save changes\n            </StyledSubmitBtn>\n          </div>\n        ) : (\n          <div>\n            <h3>Name: {contact.name}</h3>\n            <p>Number: {contact.number}</p>\n            <button\n              onClick={() => handleDeleteContact(contact.id)}\n              type=\"button\"\n              aria-label=\"Delete contact\"\n            >\n              &times;\n            </button>\n            <button\n              onClick={() => handleEditContact(contact)}\n              type=\"button\"\n              aria-label=\"Edit contact\"\n            >\n              Edit contact\n            </button>\n          </div>\n        )}\n      </li>\n    );\n  })}\n\n      </ul>\n    </section>\n  );\n};\n\nexport default Contacts;"],"names":["StyledSubmitBtn","styled","Button","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","editingContact","setEditingContact","_useState3","name","number","_useState4","updatedContact","setUpdatedContact","authentificated","useSelector","selectAuthentificated","contacts","selectUserContacts","isLoading","selectContactsIsLoading","error","selectContactsError","dispatch","useDispatch","useEffect","requestContactsThunk","handleSaveChanges","console","log","id","updateContactThunk","contactId","updatedData","_objectSpread","showContacts","Array","isArray","length","_jsxs","children","onSubmit","event","preventDefault","form","currentTarget","elements","contactName","value","contactNumber","some","contact","alert","concat","addContactThunk","_jsx","type","required","htmlType","Loader","map","onChange","e","target","onClick","deleteContactThunk","handleEditContact"],"sourceRoot":""}