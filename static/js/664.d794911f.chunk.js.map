{"version":3,"file":"static/js/664.d794911f.chunk.js","mappings":"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","sources":["components/filterContacts/Filter.jsx","pages/contacts/ContactsStyled.js","img/SpriteSvg.jsx","pages/contacts/ContactsPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filtersSlice';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const value = e.target.value;\n    console.log('Filter value changed:', value);\n    dispatch(setFilter(value)); // Відправка дії setFilter при зміні значення фільтру\n  };\n\n  return (\n    <input\n      className=\"filter_input\"\n      type=\"text\"\n      placeholder=\"Filter contacts\"\n      value={filter}\n      onChange={handleFilterChange}\n    />\n  );\n};\n\nexport default Filter;\n","import { Button } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledSubmitBtn = styled(Button)`\ncursor: pointer;\nbackground-color: #3f98f1;\ncolor: #ffff;\nbox-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08), 0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\nborder-radius: 5px;\nborder-color: transparent;\nfont-family: inherit;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.88;\ntext-align: center;\nletter-spacing: 0.04em;\npadding: 0;\n\nmargin-top: 55px;\nmargin-bottom:0;\nwidth: 205px;\nheight: 40px;\n  &:hover {\n    background: #466b89;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;","import React from \"react\";\n\nexport const CrossImage = ({width= 32, height =32}) => {\nreturn (\n    <svg width={width} height={height}>\n        <path d=\"M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\"></path>\n    </svg>\n)\n}\n\nexport const PensilImage = ({width= 32, height =32}) => {\n    return (\n        <svg width={width} height={height}>\n           <path d=\"M12 20l4-2 14-14-2-2-14 14-2 4zM9.041 27.097c-0.989-2.085-2.052-3.149-4.137-4.137l3.097-8.525 4-2.435 12-12h-6l-12 12-6 20 20-6 12-12v-6l-12 12-2.435 4z\"></path>\n        </svg>\n    )\n\n\n}","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Filter from '../../components/filterContacts/Filter';\nimport Loader from 'components/Loader/Loader';\nimport { selectAuthentificated } from 'redux/authReducer';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  requestContactsThunk,\n  selectContactsError,\n  selectContactsIsLoading,\n  selectUserContacts,\n  updateContactThunk,\n} from 'redux/contactsReducer';\nimport { selectFilter } from '../../redux/filtersSlice';\nimport { StyledSubmitBtn } from './ContactsStyled';\nimport { CrossImage, PensilImage } from '../../img/SpriteSvg';\n\nconst Contacts = () => {\n  // console.log(\"Contacts component rendering\");\n  const [editingContact, setEditingContact] = useState(null);\n  const [updatedContact, setUpdatedContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectFilter);\n  // const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n    // console.log(\"Fetching contacts...\");\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists!`);\n\n    dispatch(addContactThunk({ name, number }));\n    form.reset();\n  };\n\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n    setUpdatedContact({\n      name: contact.name,\n      number: contact.number,\n    });\n  };\n\n  const handleSaveChanges = () => {\n    if (editingContact) {\n      const { id } = editingContact;\n      dispatch(\n        updateContactThunk({\n          contactId: id,\n          updatedData: { ...updatedContact },\n        })\n      );\n      setEditingContact(null);\n    }\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const filteredContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  //  console.log(filteredContacts)\n\n  return (\n    <section className=\"section_contacts\">\n      <div className=\"new_contacts\">\n        <h1 className=\"title_contacts\">New contact</h1>\n        <form className=\"form_contacts\" onSubmit={handleSubmit}>\n          <label className=\"title_form_contacts\">\n            <p>Name:</p>\n            <input name=\"contactName\" type=\"text\" required />\n          </label>\n          <br />\n          <label className=\"title_form_contacts\">\n            <p>Phone number:</p>\n            <input name=\"contactNumber\" type=\"text\" required />\n          </label>\n          <button className=\"btn_add\" type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n      <div className=\"filter_contacts\">\n        <h2 className=\"filter_title\">Find contacts by name</h2>\n        <Filter />\n        {isLoading && <Loader />}\n        {error && <p>Oops, some error occured... {error}</p>}\n      </div>\n      <ul className=\"list_contacts\">\n        {showContacts &&\n          filteredContacts?.map(contact => {\n            return (\n              <li className=\"name_contacts\" key={contact.id}>\n                {editingContact && editingContact.id === contact.id ? (\n                  <div>\n                    {/* Форма редактирования контакта */}\n                    <label className=\"upate_contacts_form\">\n                      <p>Name:</p>\n                      <input\n                        name=\"contactName\"\n                        type=\"text\"\n                        required\n                        value={updatedContact.name}\n                        onChange={e =>\n                          setUpdatedContact({\n                            ...updatedContact,\n                            name: e.target.value,\n                          })\n                        }\n                      />\n                    </label>\n\n                    <label className=\"upate_contacts_form\">\n                      <p>Number:</p>\n                      <input\n                        name=\"contactNumber\"\n                        type=\"text\"\n                        required\n                        value={updatedContact.number}\n                        onChange={e =>\n                          setUpdatedContact({\n                            ...updatedContact,\n                            number: e.target.value,\n                          })\n                        }\n                      />\n                    </label>\n\n                    <StyledSubmitBtn onClick={handleSaveChanges}>\n                      Save changes\n                    </StyledSubmitBtn>\n                  </div>\n                ) : (\n                  <div>\n                    <h3 className=\"items_contact\">{contact.name}</h3>\n                    <p className=\"items_contact\">{contact.number}</p>\n                    <button\n                      className=\"icon-cross_btn\"\n                      onClick={() => handleDeleteContact(contact.id)}\n                      type=\"button\"\n                      aria-label=\"Delete contact\"\n                    >\n                      <CrossImage width={32} height={32} />\n                    </button>\n                    <button\n                      className=\"icon-pensil_btn\"\n                      onClick={() => handleEditContact(contact)}\n                      type=\"button\"\n                      aria-label=\"Edit contact\"\n                    >\n                      <PensilImage width={32} height={32} />\n                    </button>\n                  </div>\n                )}\n              </li>\n            );\n          })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["filter","useSelector","state","dispatch","useDispatch","_jsx","className","type","placeholder","value","onChange","e","target","console","log","setFilter","StyledSubmitBtn","styled","Button","_templateObject","_taggedTemplateLiteral","CrossImage","_ref","_ref$width","width","_ref$height","height","children","d","PensilImage","_ref2","_ref2$width","_ref2$height","_useState","useState","_useState2","_slicedToArray","editingContact","setEditingContact","_useState3","name","number","_useState4","updatedContact","setUpdatedContact","authentificated","selectAuthentificated","contacts","selectUserContacts","isLoading","selectContactsIsLoading","error","selectContactsError","selectFilter","useEffect","requestContactsThunk","handleSaveChanges","id","updateContactThunk","contactId","updatedData","_objectSpread","showContacts","Array","isArray","length","filteredContacts","contact","toLowerCase","includes","_jsxs","onSubmit","event","preventDefault","form","currentTarget","elements","contactName","contactNumber","some","alert","concat","addContactThunk","reset","required","Filter","Loader","map","onClick","deleteContactThunk","handleEditContact"],"sourceRoot":""}